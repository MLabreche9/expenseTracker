{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpenseChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["Expenseform","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d2eb62a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst Expenseform = (props) => {\r\n\tconst [enteredTitle, setEnteredTitle] = useState('');\r\n\tconst [enteredAmount, setEnteredAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\t// ALTERNATIVE WAY TO UPDATE STATE\r\n\t// const [userInput, setUserInput] = useState({\r\n\t// \tenteredTitle: '',\r\n\t// \tenteredAmount: '',\r\n\t// \tenteredDate: ''\r\n\t// });\r\n\r\n\tconst titleChangeHandler = (event) => {\r\n\t\tsetEnteredTitle(event.target.value);\r\n\t\t//ALTERNATIVE STATE UPDATE\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredTitle: event.target.value\r\n\t\t// });\r\n\t\t// setUserInput((prevState) => {\r\n\t\t// \treturn { ...prevState, enteredTitle: event.target.value };\r\n\t\t// });\r\n\t};\r\n\r\n\tconst amountChangeHandler = (event) => {\r\n\t\tsetEnteredAmount(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredAmount: event.target.value\r\n\t\t// });\r\n\t};\r\n\r\n\tconst dateChangeHandler = (event) => {\r\n\t\tsetEnteredDate(event.target.value);\r\n\t\t// setUserInput({\r\n\t\t// \t...userInput,\r\n\t\t// \tenteredDate: event.target.value\r\n\t\t// });\r\n\t};\r\n\r\n\tconst submitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst expenseData = {\r\n\t\t\ttitle: enteredTitle,\r\n\t\t\tamount: +enteredAmount,\r\n\t\t\tdate: new Date(enteredDate)\r\n\t\t};\r\n\t\tprops.onSaveExpenseData(expenseData);\r\n\t\tsetEnteredTitle('');\r\n\t\tsetEnteredAmount('');\r\n\t\tsetEnteredDate('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<div className='new-expense__controls'>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Title</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={enteredTitle}\r\n\t\t\t\t\t\tonChange={titleChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={enteredAmount}\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t\tmin='0.01'\r\n\t\t\t\t\t\tstep='0.01'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='new-expense__control'>\r\n\t\t\t\t\t<label>Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='date'\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t\tonChange={dateChangeHandler}\r\n\t\t\t\t\t\tmin='2019-01-01'\r\n\t\t\t\t\t\tmax='2022-12-31'\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='new-expense__actions'>\r\n\t\t\t\t<button type='button' onClick={props.onCancel}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type='submit'>Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Expenseform;\r\n","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst saveExpenseDataHandler = (enteredExpenseData) => {\r\n\t\tconst expenseData = {\r\n\t\t\t...enteredExpenseData,\r\n\t\t\tid: Math.random().toString()\r\n\t\t};\r\n\t\tprops.onAddExpense(expenseData);\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\tconst startEditingHandler = () => {\r\n\t\tsetIsEditing(true);\r\n\t};\r\n\r\n\tconst stopEditingHandler = () => {\r\n\t\tsetIsEditing(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='new-expense'>\r\n\t\t\t{!isEditing && (\r\n\t\t\t\t<button onClick={startEditingHandler}>Add New Expense</button>\r\n\t\t\t)}\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<ExpenseForm\r\n\t\t\t\t\tonSaveExpenseData={saveExpenseDataHandler}\r\n\t\t\t\t\tonCancel={stopEditingHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpense;\r\n","import './Card.css';\r\n\r\nconst Card = (props) => {\r\n\tconst classes = 'card ' + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\tconst dropdownChangeHandler = (event) => {\r\n\t\tprops.onChangeFilter(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='expenses-filter'>\r\n\t\t\t<div className='expenses-filter__control'>\r\n\t\t\t\t<label>Filter by year</label>\r\n\t\t\t\t<select value={props.selected} onChange={dropdownChangeHandler}>\r\n\t\t\t\t\t<option value='2022'>2022</option>\r\n\t\t\t\t\t<option value='2021'>2021</option>\r\n\t\t\t\t\t<option value='2020'>2020</option>\r\n\t\t\t\t\t<option value='2019'>2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n\tconst month = props.date.toLocaleString('en-US', { month: 'long' });\r\n\tconst day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\tconst year = props.date.getFullYear();\r\n\r\n\treturn (\r\n\t\t<div className='expense-date'>\r\n\t\t\t<div className='expense-date__month'>{month}</div>\r\n\t\t\t<div className='expense-date__year'>{year}</div>\r\n\t\t\t<div className='expense-date__day'>{day}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className='expense-item'>\r\n\t\t\t\t<ExpenseDate date={props.date} />\r\n\t\t\t\t<div className='expense-item__description'>\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className='expense-item__price'>${props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import Reach from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n\tlet expensesContent = <p>No expenses found</p>;\r\n\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className='expenses-list__fallback'>Found no expenses</h2>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ul className='expenses-list'>\r\n\t\t\t{props.items.map((expense) => (\r\n\t\t\t\t<ExpenseItem\r\n\t\t\t\t\tkey={expense.id}\r\n\t\t\t\t\ttitle={expense.title}\r\n\t\t\t\t\tamount={expense.amount}\r\n\t\t\t\t\tdate={expense.date}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t\t;\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\tlet barFillHeight = '0%';\r\n\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='chart-bar'>\r\n\t\t\t<div className='chart-bar__inner'>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName='chart-bar__fill'\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}\r\n\t\t\t\t></div>\r\n\t\t\t</div>\r\n\t\t\t<div className='chart-bar__label'>{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n\treturn (\r\n\t\t<div className='chart'>\r\n\t\t\t{props.dataPoints.map((dataPoint) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={dataPoint.label}\r\n\t\t\t\t\tvalue={dataPoint.value}\r\n\t\t\t\t\tmaxValue={totalMaximum}\r\n\t\t\t\t\tlabel={dataPoint.label}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 }\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth(); // starting at 0 =>\r\n\t\tchartDataPoints[expenseMonth].value += expense.amount;\r\n\t}\r\n\r\n\treturn <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from 'react';\r\n\r\nimport './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpenseChart';\r\n\r\nconst Expenses = (props) => {\r\n\tconst [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n\tconst filterChangeHandler = (selectedYear) => {\r\n\t\tsetFilteredYear(selectedYear);\r\n\t};\r\n\r\n\tconst filteredExpenses = props.items.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className='expenses'>\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tselected={filteredYear}\r\n\t\t\t\t\tonChangeFilter={filterChangeHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'Toilet Paper',\n\t\tamount: 94.12,\n\t\tdate: new Date(2020, 7, 14)\n\t},\n\t{ id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Car Insurance',\n\t\tamount: 294.67,\n\t\tdate: new Date(2021, 2, 28)\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'New Desk (Wooden)',\n\t\tamount: 450,\n\t\tdate: new Date(2021, 5, 12)\n\t}\n];\n\nconst App = () => {\n\tconst [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n\tconst addExpenseHandler = (expense) => {\n\t\tsetExpenses((prevExpenses) => {\n\t\t\treturn [expense, ...prevExpenses];\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NewExpense onAddExpense={addExpenseHandler} />\n\t\t\t<Expenses items={expenses} />;\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}